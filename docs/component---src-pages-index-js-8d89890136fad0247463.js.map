{"version":3,"sources":["webpack:///./src/layouts/DefaultLayout.js","webpack:///./src/components/CarpetListItem.js","webpack:///./src/components/Dropdown.js","webpack:///./src/components/Modal.js","webpack:///./src/pages/index.js"],"names":["ContainerStyle","css","DefaultLayout","_ref","children","react_default","a","createElement","className","CarpetListItemStyle","DetailStyle","Detail","label","text","PriceAndButtonStyle","PriceAndButton","_ref2","price","onClick","nextImageDivStyle","CarpetListItem","React","memo","_ref3","onOpenInfo","carpet","slickRef","useRef","fi","size","current","slickPrev","lib_default","ratio","fields","mainImage","normal","aspectRatio","react_slick_lib_default","Object","assign","ref","swipe","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","lazyLoad","ReactImageMagnify","enlargedImagePosition","smallImage","alt","isFluidWidth","largeImage","zoom","width","height","lensStyle","backgroundColor","slickNext","series","series_cn","CarpetListItem_Detail","signature","made_in","density","display_size","CarpetListItem_PriceAndButton","b","id","DropDownStyle","Dropdown","_ref$labels","labels","_ref$selected","selected","_ref$onSelect","onSelect","_useState","useState","isOpen","setIsOpen","href","onMouseDown","e","onTouchStart","onTouchEnd","preventDefault","onBlur","style","transform","map","index","key","modalStyle","overlay","zIndex","content","maxWidth","padding","left","right","border","contentStyle","Modal","onRequestClose","react_modal_lib_default","ariaHideApp","contentLabel","code","backgroundImage","src","backgroundSize","backgroundRepeat","margin","setConfig","pureSFC","injectGlobal","FilterBarStyle","filterOptions","seriesFilter","value","priceFilter","min","max","Number","MAX_SAFE_INTEGER","sizeFilter","query","__webpack_exports__","data","modalCarpet","setModalCarpet","listRef","_useState2","selectedFilters","setselectedFilters","carpets","useMemo","edges","v","k","temp","node","filteredCarpets","filter","length","includes","parseInt","replace","Fragment","alignSelf","components_Dropdown","item","i","es","isScrolling","onChildScroll","scrollTop","disableHeight","onResize","dimentions","console","log","recomputeRowHeights","forceUpdateGrid","outline","autoHeight","onScroll","rowCount","overscanRowCount","rowHeight","_ref4","isMobile","window","matchMedia","matches","imageButtonWidth","imageAspectRatio","imageWidth","Math","rowRenderer","_ref5","components_CarpetListItem"],"mappings":"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","file":"component---src-pages-index-js-8d89890136fad0247463.js","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\n\nconst ContainerStyle = css`\n  margin: 0 auto;\n  max-width: 1140px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default ({ children }) => (\n  <div className={ContainerStyle}> {children} </div>\n);\n","import React, { useState, useRef } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { css } from \"emotion\";\nimport ReactImageMagnify from \"react-image-magnify\";\nimport Ratio from \"react-ratio\";\n\nimport ReactSlick from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\n\nfunction mod(n, m) {\n  return ((n % m) + m) % m;\n}\n\nconst CarpetListItemStyle = css`\n  color: #000000db;\n  font-family: LatoLatinWebBlack;\n  width: 100%;\n  // height: 1000px;\n  display: flex;\n\n  .slick-initialized .slick-slide {\n    float: none;\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  .left {\n    flex: 4;\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    img {\n      // width: 100%;\n    }\n\n    .Ratio {\n      flex: 1;\n    }\n\n    .Ratio-content {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    svg {\n      cursor: pointer;\n      @media only screen and (max-width: 768px) {\n        width: 30px;\n      }\n    }\n  }\n  .right {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    text-align: center;\n    flex: 4;\n    padding: 0 10px;\n\n    h3 {\n      margin: 0;\n\n      font-size: 4.4em;\n    }\n    h2 {\n      margin: 0;\n      font-weight: 100;\n      font-size: 4em;\n      margin-top: -20px;\n    }\n\n    .row {\n      display: flex;\n    }\n  }\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column-reverse;\n\n    .right {\n      margin: 25px 10px 15px 10px;\n\n      h3 {\n        margin: 0;\n\n        font-size: 3.2em;\n      }\n      h2 {\n        margin: 0;\n        font-weight: 100;\n        font-size: 2.5em;\n        margin-top: -10px;\n      }\n    }\n  }\n`;\n\nconst DetailStyle = css`\n  flex: 1;\n  margin-top: 5px;\n  label {\n    margin: 0;\n    font-size: 1.4em;\n  }\n  p {\n    margin: -8px 0 0 0;\n    font-size: 2.2em;\n  }\n\n  @media only screen and (max-width: 768px) {\n    label {\n      font-size: 1em;\n    }\n    p {\n      margin: -4px 0 0 0;\n      font-size: 1.3em;\n    }\n  }\n`;\n\nconst Detail = ({ label, text }) => (\n  <div className={DetailStyle}>\n    <label>{label}</label>\n    <p>{text}</p>\n  </div>\n);\n\nconst PriceAndButtonStyle = css`\n  display: flex;\n  margin-top: 25px;\n  height: 2em;\n  align-items: center;\n  div {\n    flex: 1;\n  }\n  p {\n    font-size: 2.4em;\n    margin: 0;\n  }\n  a {\n    display: block;\n    text-align: center;\n    width: 100%;\n    font-weight: 700;\n    padding: 5px 0;\n    font-size: 2em;\n    border-bottom: 5px solid #000000db;\n    text-decoration: none;\n    color: #000000db;\n\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: 768px) {\n    margin-top: 12px;\n    p {\n      font-size: 1.4em;\n    }\n    a {\n      font-size: 1em;\n    }\n  }\n`;\n\nconst PriceAndButton = ({ price, onClick }) => (\n  <div className={PriceAndButtonStyle}>\n    <div>\n      <p>¥{price}</p>\n    </div>\n    <div>\n      <a onClick={onClick}>预约访问</a>\n    </div>\n  </div>\n);\n\nconst nextImageDivStyle = css`\n  width: 0;\n  @media only screen and (max-width: 768px) {\n    width: initial;\n  }\n`;\n\nconst CarpetListItem = React.memo(\n  ({ onOpenInfo, carpet }) => {\n    const slickRef = useRef(null);\n\n    return (\n      <div className={CarpetListItemStyle}>\n        <div className=\"left\">\n          <div>\n            <FiChevronLeft\n              size={40}\n              onClick={() => slickRef.current.slickPrev()}\n            />\n          </div>\n          <Ratio ratio={carpet.fields.mainImage.normal.aspectRatio}>\n            <ReactSlick\n              ref={slickRef}\n              {...{\n                swipe: false,\n                dots: false,\n                arrows: false,\n                infinite: true,\n                speed: 500,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                lazyLoad: true\n              }}\n            >\n              <ReactImageMagnify\n                {...{\n                  enlargedImagePosition: \"over\",\n                  smallImage: {\n                    alt: \"Wristwatch by Ted Baker London\",\n                    isFluidWidth: true,\n                    ...carpet.fields.mainImage.normal\n                  },\n                  largeImage: {\n                    ...carpet.fields.mainImage.zoom,\n                    width: 1800 * carpet.fields.mainImage.normal.aspectRatio,\n                    height: 1800\n                  },\n                  lensStyle: { backgroundColor: \"rgba(0,0,0,.6)\" }\n                }}\n              />\n\n              {/* {carpet.fields.images.map((image, index) => (\n                <img key={image.id} {...image.normal} />\n              ))} */}\n            </ReactSlick>\n          </Ratio>\n\n          <div className={nextImageDivStyle}>\n            <FiChevronRight\n              size={40}\n              onClick={() => slickRef.current.slickNext()}\n            />\n          </div>\n        </div>\n        <div className=\"right\">\n          <h3>{carpet.series}</h3>\n          <h2>{carpet.series_cn}</h2>\n\n          <div className=\"row\">\n            <Detail label=\"标记\" text={carpet.signature} />\n            <Detail label=\"制造\" text={carpet.made_in} />\n          </div>\n\n          <div className=\"row\">\n            <Detail label=\"密度\" text={carpet.density} />\n            <Detail label=\"尺寸\" text={carpet.display_size} />\n          </div>\n\n          <PriceAndButton price={carpet.price} onClick={onOpenInfo} />\n        </div>\n      </div>\n    );\n  },\n  (a, b) => a.carpet.id === b.carpet.id\n);\n\nexport default CarpetListItem;\n\nexport const query = graphql`\n  fragment CarpetListItemCarpetFragment on DataXlsx__Carpet {\n    id\n    price\n    code\n    series\n    series_cn\n    made_in\n    signature\n    width\n    height\n    density\n    fields {\n      mainImage {\n        normal: fluid(maxWidth: 640) {\n          aspectRatio\n          src\n          srcSet\n          sizes\n        }\n        zoom: fixed(width: 1400) {\n          src\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { css } from \"emotion\";\n\nimport { FiChevronDown } from \"react-icons/fi\";\n\nconst DropDownStyle = css`\n  height: 70px;\n\n  p {\n    font-size: 26px;\n    font-weight: 700;\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  .click {\n    border-bottom: 5px solid #000000db;\n    color: #000000db;\n\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    min-width: 160x;\n    align-items: center;\n\n    svg {\n      stroke: #000000db;\n      height: 100%;\n      width: 40px;\n\n      transition: 0.15s;\n    }\n\n    p {\n      padding-right: 10px;\n    }\n\n    padding: 0 5px;\n  }\n\n  div {\n    position: relative;\n    padding-left: 5px;\n    border-width: 0 5px 5px 5px;\n    border-style: solid;\n    border-color: #000000db;\n\n    background-color: white;\n\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n\n    a {\n      padding: 5px 10px 5px 0;\n    }\n  }\n`;\n\nconst Dropdown = ({ labels = [\"所有\"], selected = 0, onSelect = () => {} }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={DropDownStyle}>\n      <a\n        href=\"#\"\n        className=\"click\"\n        onMouseDown={e => setIsOpen(!isOpen)}\n        onTouchStart={e => setIsOpen(!isOpen)}\n        onTouchEnd={e => e.preventDefault()}\n        onBlur={e => setIsOpen(false)}\n      >\n        <p>{labels[selected]}</p>\n        <FiChevronDown style={isOpen && { transform: \"rotate(180deg)\" }} />\n      </a>\n      {isOpen && (\n        <div>\n          {labels.map((label, index) => (\n            <a\n              href=\"#\"\n              key={index}\n              onMouseDown={() => {\n                onSelect(index);\n                setIsOpen(false);\n              }}\n              onTouchStart={() => {\n                onSelect(index);\n                setIsOpen(false);\n              }}\n              onTouchEnd={e => e.preventDefault()}\n            >\n              <p>{labels[index]}</p>\n            </a>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { css } from \"emotion\";\n\nconst modalStyle = {\n  overlay: {\n    zIndex: 10\n  },\n  content: {\n    width: \"90%\",\n    maxWidth: \"800px\",\n    padding: 0,\n    left: \"50%\",\n    right: \"auto\",\n    transform: \"translate(-50%,0)\",\n    border: \"5px solid #000000db\"\n  }\n};\n\nconst contentStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  * {\n    margin: 0;\n  }\n\n  .code {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    p {\n      font-size: 1em;\n    }\n    h2 {\n      font-size: 3em;\n    }\n\n    padding-bottom: 10px;\n    border-bottom: 5px solid #000000db;\n    margin: 5px 0;\n  }\n\n  .bottom {\n    height: 100%;\n    margin: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    div {\n      flex: 2;\n      background-position: center;\n    }\n\n    p {\n      font-size: 1.6em;\n    }\n  }\n`;\n\nexport default ({ isOpen, onRequestClose, carpet }) => (\n  <Modal\n    isOpen={isOpen}\n    ariaHideApp={false}\n    onRequestClose={onRequestClose}\n    style={modalStyle}\n    contentLabel=\"Contact Modal\"\n  >\n    {isOpen && (\n      <div className={contentStyle}>\n        <div className=\"code\">\n          <p>你选择的产品代码</p>\n          <h2>{carpet.code}</h2>\n        </div>\n        <div className=\"bottom\">\n          <div\n            style={{\n              backgroundImage: `url(${carpet.fields.mainImage.normal.src})`,\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              margin: 10,\n\n              height: \"100%\"\n            }}\n          />\n          <div>\n            <p>如果您对这种地毯感兴趣，请联系我们:</p>\n            <p>18610017411</p>\n            <p>或</p>\n            <p>18610017400</p>\n          </div>\n        </div>\n      </div>\n    )}\n  </Modal>\n);\n","import React, { useState, useMemo, useRef } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { css, injectGlobal } from \"emotion\";\nimport { List, WindowScroller, AutoSizer } from \"react-virtualized\";\n\nimport DefaultLayout from \"../layouts/DefaultLayout\";\nimport CarpetListItem from \"../components/CarpetListItem\";\nimport Dropdown from \"../components/Dropdown\";\nimport Modal from \"../components/Modal\";\n\nimport { setConfig } from \"react-hot-loader\";\nsetConfig({ pureSFC: true });\n\ninjectGlobal`\n/* Webfont: LatoLatin-Black */@font-face {\n  font-family: 'LatoLatinWebBlack';\n  src: url('fonts/LatoLatin/fonts/LatoLatin-Black.eot'); /* IE9 Compat Modes */\n  src: url('fonts/LatoLatin/fonts/LatoLatin-Black.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n       url('fonts/LatoLatin/fonts/LatoLatin-Black.woff2') format('woff2'), /* Modern Browsers */\n       url('fonts/LatoLatin/fonts/LatoLatin-Black.woff') format('woff'), /* Modern Browsers */\n       url('fonts/LatoLatin/fonts/LatoLatin-Black.ttf') format('truetype');\n  font-style: normal;\n  font-weight: normal;\n  text-rendering: optimizeLegibility;\n}\n`;\n\ninjectGlobal`\nbody {\n  font-family: LatoLatinWebBlack;\n}\n.ReactModalPortal > * {\n  opacity: 0;\n}\n.ReactModal__Overlay {\n  transition: opacity 200ms ease-in-out;\n  background: rgba(0, 0, 0, 0.15);\n  &--after-open {\n      opacity: 1;\n  }\n  &--before-close {\n      opacity: 0;\n  }\n}\n`;\n\nconst FilterBarStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  padding: 15px 0;\n  background-color: white;\n\n  z-index: 5;\n  position: sticky;\n  top: 0;\n\n  > div {\n    margin: 0 10px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0;\n    position: relative;\n    flex-wrap: wrap;\n\n    > div {\n      width: 100%;\n      margin: 0 5px;\n    }\n  }\n`;\n\nconst filterOptions = {\n  seriesFilter: [\n    { label: \"所有系列\", value: [] },\n    { label: \"伊斯法罕\", value: [\"ISFAHAN\"] },\n    { label: \"大不里士\", value: [\"TABRIZ\"] }\n  ],\n  priceFilter: [\n    { label: \"所有价格\", value: { min: 0, max: Number.MAX_SAFE_INTEGER } },\n    { label: \"¥0-¥49,999\", value: { min: 0, max: 50000 } },\n    { label: \"¥49,999-¥99,999\", value: { min: 50000, max: 100000 } },\n    { label: \"¥99,999-\", value: { min: 100000, max: Number.MAX_SAFE_INTEGER } }\n  ],\n  sizeFilter: [\n    { label: \"所有大小\", value: { min: 0, max: Number.MAX_SAFE_INTEGER } },\n    { label: \"0-5m2\", value: { min: 0, max: 5 } },\n    { label: \"5m2-10m2\", value: { min: 5, max: 10 } },\n    { label: \"10m2-\", value: { min: 10, max: Number.MAX_SAFE_INTEGER } }\n  ]\n};\n\nconst mockCarpets = carpets => {\n  return carpets.map((v, k) => {\n    let temp = { ...v.node };\n    temp.display_size = `${temp.width}x${temp.height}cm`;\n    return temp;\n  });\n};\n\nexport default ({ data }) => {\n  const [modalCarpet, setModalCarpet] = useState(null);\n\n  const listRef = useRef(null);\n\n  const [selectedFilters, setselectedFilters] = useState({\n    series: 0,\n    price: 0,\n    size: 0\n  });\n\n  const carpets = useMemo(() => mockCarpets(data.carpets.edges), []);\n\n  const filteredCarpets = useMemo(() => {\n    const seriesFilter =\n      filterOptions.seriesFilter[selectedFilters.series].value;\n    const priceFilter = filterOptions.priceFilter[selectedFilters.price].value;\n    const sizeFilter = filterOptions.sizeFilter[selectedFilters.size].value;\n    return carpets.filter(carpet => {\n      if (seriesFilter.length != 0 && !seriesFilter.includes(carpet.series)) {\n        return false;\n      }\n\n      const price = parseInt(carpet.price.replace(\",\", \"\"));\n      if (price < priceFilter.min || price >= priceFilter.max) {\n        return false;\n      }\n\n      const size = (carpet.width * carpet.height) / 10000;\n      if (size < sizeFilter.min || size >= sizeFilter.max) {\n        return false;\n      }\n\n      return true;\n    });\n  }, [selectedFilters.series, selectedFilters.price, selectedFilters.size]);\n\n  return (\n    <>\n      <Modal\n        carpet={modalCarpet}\n        isOpen={!!modalCarpet}\n        onRequestClose={() => setModalCarpet(null)}\n      />\n      <DefaultLayout>\n        <img\n          style={{ alignSelf: \"center\", maxWidth: 800, width: \"100%\" }}\n          src={\"Logo/2x/Artboard 2@2x.png\"}\n        />\n        <div className={FilterBarStyle}>\n          {/* <Dropdown\n            labels={filterOptions.seriesFilter.map(item => item.label)}\n            selected={selectedFilters.series}\n            onSelect={i =>\n              setselectedFilters({ ...selectedFilters, series: i })\n            }\n          /> */}\n          <Dropdown\n            labels={filterOptions.priceFilter.map(item => item.label)}\n            selected={selectedFilters.price}\n            onSelect={i => setselectedFilters({ ...selectedFilters, price: i })}\n          />\n          <Dropdown\n            labels={filterOptions.sizeFilter.map(item => item.label)}\n            selected={selectedFilters.size}\n            onSelect={i => setselectedFilters({ ...selectedFilters, size: i })}\n          />\n        </div>\n        {/* {filteredCarpets.map(carpet => (\n        <CarpetListItem carpet={carpet} key={carpet.id} />\n      ))} */}\n        <WindowScroller>\n          {({ height, isScrolling, onChildScroll, scrollTop }) => (\n            <AutoSizer\n              disableHeight\n              onResize={dimentions => {\n                console.log(dimentions);\n                listRef.current.recomputeRowHeights(); //default row is 0, which in turn causes all other row caches be wiped\n                listRef.current.forceUpdateGrid();\n              }}\n            >\n              {({ width }) => (\n                <List\n                  ref={listRef}\n                  style={{ outline: \"none\" }} // remove blue border\n                  autoHeight\n                  height={height}\n                  width={width}\n                  isScrolling={isScrolling}\n                  onScroll={onChildScroll}\n                  rowCount={filteredCarpets.length}\n                  overscanRowCount={4}\n                  rowHeight={({ index }) => {\n                    const isMobile = window.matchMedia(\n                      \"only screen and (max-width: 768px)\"\n                    ).matches;\n                    const imageButtonWidth = isMobile ? 30 : 40;\n                    const imageAspectRatio =\n                      filteredCarpets[index].fields.mainImage.normal\n                        .aspectRatio;\n\n                    const mobileRightSideHeight = 285;\n\n                    if (isMobile) {\n                      const imageWidth = width - 2 * imageButtonWidth;\n                      return (\n                        imageWidth / imageAspectRatio + mobileRightSideHeight\n                      );\n                    } else {\n                      const imageWidth = width / 2 - imageButtonWidth;\n                      return Math.max(imageWidth / imageAspectRatio, 500);\n                    }\n                  }}\n                  rowRenderer={({ index, style }) => {\n                    return (\n                      <div style={style} key={filteredCarpets[index].id}>\n                        <CarpetListItem\n                          onOpenInfo={() =>\n                            setModalCarpet(filteredCarpets[index])\n                          }\n                          carpet={filteredCarpets[index]}\n                          key={width} // React Image Magnify fails when window is resized. That event is rare so we just reset the whole CarpetListItem (reseting just the magnify component didnt work for some reason);\n                        />\n                      </div>\n                    );\n                  }}\n                  scrollTop={scrollTop}\n                />\n              )}\n            </AutoSizer>\n          )}\n        </WindowScroller>\n      </DefaultLayout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    carpets: allDataXlsxCarpet {\n      edges {\n        node {\n          ...CarpetListItemCarpetFragment\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}